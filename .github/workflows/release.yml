name: Build and Release

on:
  push:
    tags:
      - "v*"

defaults:
  run:
    working-directory: papaya-client

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Create or get release
        id: create_release
        run: |
          gh release view ${{ github.ref_name }} || gh release create ${{ github.ref_name }} --title "Release ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-linux:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Run build script
        run: |
          chmod +x package.sh
          ./package.sh

      - name: Compress output directory
        run: zip -r Papaya_${{ github.ref_name }}_linux.zip ./output

      - name: Upload Linux artifact
        run: |
          gh release upload ${{ github.ref_name }} Papaya_${{ github.ref_name }}_linux.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-mac:
    runs-on: macos-latest
    needs: create-release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Run build script
        run: |
          chmod +x package.sh
          ./package.sh

      - name: Compress output directory
        run: zip -r Papaya_${{ github.ref_name }}_mac.zip ./output

      - name: Upload Mac artifact
        run: |
          gh release upload ${{ github.ref_name }} Papaya_${{ github.ref_name }}_mac.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-windows:
    runs-on: windows-latest
    needs: create-release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven

      - name: Install Git Bash
        run: choco install git -y

      - name: Run build script
        run: bash package.sh

      - name: List all files and directories
        run: Get-ChildItem -Recurse
        shell: pwsh

      - name: Compress output directory
        run: |
          Compress-Archive -Path .\output\* -DestinationPath Papaya_${{ github.ref_name }}_windows.zip
        shell: pwsh

      - name: Upload Windows artifact
        run: |
          gh release upload ${{ github.ref_name }} Papaya_${{ github.ref_name }}_windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
